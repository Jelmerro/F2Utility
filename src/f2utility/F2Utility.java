package f2utility;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.Base64;
import javafx.application.Application;
import javafx.embed.swing.SwingFXUtils;
import javafx.scene.Scene;
import javafx.scene.image.Image;
import javafx.scene.layout.BorderPane;
import javafx.stage.Stage;
import javax.imageio.ImageIO;

/**
 * Main class of the application creates all panes
 *
 * @author Jelmerro
 */
public class F2Utility extends Application {

    public static Stage stage;

    /**
     * Application starts and decorates stage
     *
     * @param s Stage
     */
    @Override
    public void start(Stage s) {
        stage = s;
        BorderPane pane = new BorderPane();
        Scene scene = new Scene(pane);
        //MenuBar top
        MenuBar menubar = MenuBar.getInstance();
        pane.setTop(menubar);
        //Files center
        FileList fileList = FileList.getInstance();
        pane.setCenter(fileList);
        //Tools bottom
        ToolsBox toolPane = ToolsBox.getInstance();
        pane.setBottom(toolPane);
        //Stage
        stage.setTitle("F2Utility");
        stage.setScene(scene);
        //Sets the size to a decent portion of the screen
        stage.setMinWidth(935);
        stage.setMinHeight(500);
        stage.setWidth(935);
        stage.setHeight(600);
        //Adds icon from base64 and show the frame
        String imageString = "";
        stage.getIcons().add(Base64ToImage(imageString));
        stage.show();
    }

    /**
     * Converts a base64 String to an Image
     *
     * @param base64 String
     * @return image Image
     */
    public Image Base64ToImage(String base64) {
        try {
            byte[] imageBytes = Base64.getDecoder().decode(base64);
            Image image = SwingFXUtils.toFXImage(ImageIO.read(new ByteArrayInputStream(imageBytes)), null);
            return image;
        } catch (IOException ex) {
            return null;
        }
    }

    /**
     *
     * @param args String[]
     */
    public static void main(String[] args) {
        Application.launch(args);
    }
}
